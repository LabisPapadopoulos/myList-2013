Τεχνολογία Λογισμικού
’σκηση 1.

Η ’σκηση υλοποιήθηκε από τα μέλη της ομάδας:
* Χαράλαμπος Παπαδόπουλος
* Νάσος Τάτσιος
* Νίκος Μανιακουδάκης
* Νίκος Λιάππας

Οι μέθοδοι κλάσης ArrayList που υλοποιήθηκαν είναι οι εξής:

ArrayList(int size):
Constructor που δημιουργεί ένα πίνακα από double μεγέθους size που δέχεται ως όρισμα και αρχικοποιεί την λίστα με αριθμούς για δοκιμαστικούς λόγους.

virtual ~ArrayList():
Destructor της κλάσης που αποδεσμεύει τον χώρο που καταλάμβανε η λίστα.

double *getArrayList():
Μέθοδος που επιστρέφει τα στοιχεία μιας λίστας σαν ένα πίνακα από double.

bool insertNumber(double num, int x):
Μέθοδος που εισάγει έναν αριθμό στην θέση χ της λίστας και μετακινεί τα υπόλοιπα στοιχεία. Παίρνει σαν όρισμα τον αριθμό προς εισαγωγή και την θέση εισαγωγής και ελέγχει αν αυτή είναι μέσα στα επιτρεπτά όρια της λίστας και σκανάρει την λίστα από το τέλος προς την αρχή μετατοπίζοντας έτσι τα στοιχεία της κατά μια θέση και στην θέση που μένη κενή τοποθετείται ο αριθμός num. Αν η εισαγωγή έγινε με επιτυχία επιστρέφει true, αλλιώς false.

void addNumber(double num, int x):
Μέθοδος που προσθέτει ένα αριθμό σε όλα τα στοιχεία της λίστας μετά τον αριθμό χ. Σκανάρει όλη την λίστα από την θέση χ και μετά και προσθέτει στη λίστα τον αριθμό num που δέχεται ως είσοδο.

void printArray(double *array):
Βοηθητική μέθοδος εκτύπωσης του στιγμιότυπου της λίστας για λόγους debugging.

int  addinPositionNumber(double ari):
Μέθοδος που δίνει τιμές τύπου int  και η παίρνει σαν όρισμα ένα αριθμό τύπου double και χρησιμοποιώντας τη συνάρτηση rand() βρίσκει μία τυχαία τιμή δείκτη του πίνακα. Στη θέση που ορίζεται από το δείκτη προσθέτει στην υπάρχουσα τιμή την τιμή που περνάει από το όρισμα.

int SubFoundNumber(double ari, int i):
Μέθοδος που ελέγχει αν ο αριθμός ari υπάρχει στη θέση i. Εάν υπάρχει μετακινεί όλα τα στοιχεία του πίνακα και δίνει αποτέλεσμα μηδέν. Στην αντίθετη περίπτωση επιστρέφει -1.


Συμβάσεις που ακολουθήθηκαν:
* Τα ορίσματα των μεθόδων είναι περιγραφικά και γίνεται χρήση πρώτα των αριθμών κινητής υποδιαστολής διπλής ακρίβειας (double) και μετά των ακεραίων αριθμών (int).
* Για χειρισμό σφαλμάτων λογικής έχουν χρησιμοποιηθεί assertions και λογικές συνθήκες για έλεγχο των επιστρεφόμενων τιμών των συναρτήσεων και εκτύπωση ανάλογου μηνύματος.
* Οι ονομασίες των μεθόδων και των μεταβλητών ακολουθούν CamelCase στιλ.
* Ιδιοκτησίας κώδικα, πάνω από την δήλωση κάθε ρουτίνας αναγράφεται σε σχόλια ο "ιδιοκτήτης" της.


Tests:
Για να δοκιμαστεί κάθε μια μέθοδος για την ορθότητα της λειτουργίας της, δημιουργήθηκε η main συνάρτηση όπου μέσα σ' αυτή καλούνται όλες οι μέθοδοι και σύμφωνα με ελέγχους λογικών συνθηκών, assertions και οι ανάλογες εκτυπώσεις που δίνουν συμπεραίνουμε ότι λειτουργούν σωστά.  
